@Bean
public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
    http
        .csrf(csrf -> csrf.disable()) // Disable CSRF for API calls
        .authorizeHttpRequests(authorizeRequests -> authorizeRequests
            // Explicitly permit the login endpoint
            .requestMatchers("/api/login").permitAll() 
            // All other requests require authentication
            .anyRequest().authenticated() 
        )
        // You don't need httpBasic() for a custom login controller
        // .httpBasic(Customizer.withDefaults()); 
        .formLogin(form -> form.disable()); // Disable form login since you're using a REST API

    return http.build();
}

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
@EnableWebSecurity
public class SecurityConfig {

    @Bean
    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
        http
            .csrf(csrf -> csrf.disable()) // Add this line to disable CSRF
            .authorizeHttpRequests(authorizeRequests -> authorizeRequests
                .requestMatchers("/api/login").permitAll()
                .anyRequest().authenticated()
            );
        return http.build();
    }
}
