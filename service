✅ ReportService.java
package project.user.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import project.user.model.Report;
import project.user.model.SubGroup;
import project.user.repository.ReportRepository;
import project.user.repository.SubGroupRepository;

import java.util.List;
import java.util.Optional;

@Service
public class ReportService {

    @Autowired
    private ReportRepository reportRepository;

    @Autowired
    private SubGroupRepository subGroupRepository;

    // Save a report
    public Report saveReport(Report report) {
        return reportRepository.save(report);
    }

    // Get all reports by SubGroup
    public List<Report> getReportsBySubGroup(Long subGroupId) {
        Optional<SubGroup> subGroup = subGroupRepository.findById(subGroupId);
        return subGroup.map(reportRepository::findBySubGroup).orElse(List.of());
    }

    // Get single report by ID
    public Optional<Report> getReportById(Long reportId) {
        return reportRepository.findById(reportId);
    }
}

✅ FavoriteService.java
package project.user.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import project.user.model.Favorite;
import project.user.model.Report;
import project.user.model.User;
import project.user.repository.FavoriteRepository;
import project.user.repository.ReportRepository;
import project.user.repository.UserRepository;

import java.util.List;

@Service
public class FavoriteService {

    @Autowired
    private FavoriteRepository favoriteRepository;

    @Autowired
    private UserRepository userRepository;

    @Autowired
    private ReportRepository reportRepository;

    // Add a report to favorites
    public Favorite addFavorite(Long userId, Long reportId) {
        User user = userRepository.findById(userId)
                .orElseThrow(() -> new RuntimeException("User not found"));

        Report report = reportRepository.findById(reportId)
                .orElseThrow(() -> new RuntimeException("Report not found"));

        Favorite favorite = new Favorite();
        favorite.setUser(user);
        favorite.setReport(report);

        return favoriteRepository.save(favorite);
    }

    // Get favorites by user
    public List<Favorite> getFavoritesByUser(Long userId) {
        return favoriteRepository.findByUser_UserId(userId);
    }

    // Remove favorite
    public void removeFavorite(Long favoriteId) {
        favoriteRepository.deleteById(favoriteId);
    }
}

✅ NotificationService.java
package project.user.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import project.user.model.Notification;
import project.user.repository.NotificationRepository;

import java.util.List;

@Service
public class NotificationService {

    @Autowired
    private NotificationRepository notificationRepository;

    // Get all notifications for a user
    public List<Notification> getNotificationsForUser(Long userId) {
        return notificationRepository.findByUser_UserId(userId);
    }
}
