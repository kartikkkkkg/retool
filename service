✅ ReportService.java
package project.user.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import project.user.model.Report;
import project.user.model.SubGroup;
import project.user.repository.ReportRepository;
import project.user.repository.SubGroupRepository;

import java.util.List;
import java.util.Optional;

@Service
public class ReportService {

    @Autowired
    private ReportRepository reportRepository;

    @Autowired
    private SubGroupRepository subGroupRepository;

    // Save a report
    public Report saveReport(Report report) {
        return reportRepository.save(report);
    }

    // Get all reports by SubGroup
    public List<Report> getReportsBySubGroup(Long subGroupId) {
        Optional<SubGroup> subGroup = subGroupRepository.findById(subGroupId);
        return subGroup.map(reportRepository::findBySubGroup).orElse(List.of());
    }

    // Get single report by ID
    public Optional<Report> getReportById(Long reportId) {
        return reportRepository.findById(reportId);
    }
}
@Service
public class FavoriteService {

    @Autowired
    private FavoriteRepository favoriteRepository;

    @Autowired
    private UserRepository userRepository;

    @Autowired
    private ReportRepository reportRepository;

    // Add a report to favorites
    public Favorite addFavorite(Long userId, Long reportId) {
        Favorite fav = new Favorite();
        fav.setUser(userRepository.findById(userId).orElseThrow(() -> new RuntimeException("User not found")));
        fav.setReport(reportRepository.findById(reportId).orElseThrow(() -> new RuntimeException("Report not found")));
        return favoriteRepository.save(fav);
    }

    // Get favorite reports for a user
    public List<Report> getFavorites(Long userId) {
        List<Favorite> favorites = favoriteRepository.findByUser_UserId(userId);
        return favorites.stream()
                        .map(Favorite::getReport)
                        .collect(Collectors.toList());
    }

    // Remove a report from favorites
    public void removeFavorite(Long userId, Long reportId) {
        List<Favorite> favorites = favoriteRepository.findByUser_UserId(userId);
        favorites.stream()
                 .filter(fav -> fav.getReport().getReportId().equals(reportId))
                 .findFirst()
                 .ifPresent(favoriteRepository::delete);
    }
}


✅ NotificationService.java
package project.user.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import project.user.model.Notification;
import project.user.repository.NotificationRepository;

import java.util.List;

@Service
public class NotificationService {

    @Autowired
    private NotificationRepository notificationRepository;

    // Get all notifications for a user
    public List<Notification> getNotificationsForUser(Long userId) {
        return notificationRepository.findByUser_UserId(userId);
    }
}
